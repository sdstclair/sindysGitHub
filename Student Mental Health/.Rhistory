install.packages("caret")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("e1071")
install.packages("lmtest")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("predictmeans")
install.packages("ggplot2")
install.packages("datasets")
install.packages("readxl")
install.packages("dplyr")
install.packages("PerformanceAnalytics")
install.packages("corrplot")
install.packages("gapminder")
install.packages("gridextra")
install.packages("Ecdat")
install.packages("corpcor")
install.packages("GPArotation")
install.packages("psych")
install.packages("IDPmisc")
install.packages("lattice")
install.packages("treetop")
install.packages("scales")
install.packages("rcompanion")
install.packages("gmodels")
install.packages("car")
install.packages("caret")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("caret")
install.packages("magrittr")
install.packages("tidyr")
install.packages("lmtest")
install.packages("popbio")
install.packages("e1071")
install.packages("data.table")
install.packages("effects")
install.packages("multcomp")
install.packages("mvnormtest")
install.packages("gapminder")
install.packages("Ecdat")
install.packages("ggplot2")
install.packages("datasets")
install.packages("lattice")
install.packages("scales")
install.packages("car")
install.packages("caret")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("caret")
install.packages("magrittr")
install.packages("tidyr")
install.packages("lmtest")
install.packages("e1071")
install.packages("data.table")
install.packages("ggplot2")
install.packages("datasets")
install.packages("caret")
install.packages("e1071")
install.packages("data.table")
install.packages("ggplot2")
install.packages("datasets")
install.packages("caret")
install.packages("datasets")
install.packages("caret")
stdntMH <- stdntMH %>% mutate(CGPA2=recode(CGPA, '0 - 1.99'='0', '2.00 - 2.49'='1', '2.50 - 2.99'='2', '3.00 - 3.49'='3', '3.50 - 4.00'='4'))
library(abind)
library(AER)
library(ash)
library(askpass)
library(assertthat)
library(backports)
library(base64enc)
library(BH)
library(bit)
library(bit64)
library(bitops)
library(blob)
library(BMA)
library(translations, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(tools, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(tcltk, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(stats4, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(splines, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(spatial, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(rpart, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(nnet, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(mgcv, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(MASS, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(lattice, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(KernSmooth, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(grid, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(foreign, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(compiler, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(codetools, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(cluster, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(class, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(boot, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(zip)
library(zeallot)
library(yaml)
library(xts)
library(xtable)
library(xopen)
library(xml2)
library(xfun)
library(wordcloud)
library(wk)
library(withr)
library(whisker)
library(waldo)
library(vroom)
library(viridisLite)
library(viridis)
library(vctrs)
library(uuid)
library(utf8)
library(usethis)
library(urlchecker)
library(units)
library(tzdb)
library(tweenr)
library(treetop)
library(tokenizers)
library(tmvnsim)
library(tm)
library(tis)
library(tinytex)
library(timeDate)
library(tidyverse)
library(tidytext)
library(tidyselect)
library(tidyr)
library(tibble)
library(tidyverse)
library(TH.data)
library(tfruns)
library(tfautograph)
library(textshaping)
library(testthat)
library(terra)
library(tensorflow)
library(tensor)
detach("package:tensor", unload = TRUE)
library(tensor)
library(TeachingDemos)
library(systemfonts)
library(survey)
library(sys)
library(stringr)
library(stringi)
library(statmod)
library(stars)
library(SQUAREM)
library(spatstat.utils)
library(spatstat.sparse)
library(spatstat.random)
detach("package:spatstat.geom", unload = TRUE)
library(spatstat.geom)
library(spatstat.core)
library(SparseM)
library(sp)
library(sourcetools)
library(SnowballC)
library(slam)
library(skimr)
library(shiny)
library(sessioninfo)
library(selectr)
library(scales)
library(sass)
library(s2)
library(rvest)
library(rversions)
library(rstudioapi)
library(rstatix)
library(rprojroot)
library(roxygen2)
library(rootSolve)
library(rmarkdown)
library(rlas)
library(rlang)
library(rgl)
library(rgeos)
library(rgdal)
library(reticulate)
library(reshape2)
library(reprex)
library(repr)
library(remotes)
library(rematch2)
library(rematch)
library(recipes)
library(readxl)
library(Rdpack)
library(RCurl)
library(RcppTOML)
library(RcppProgress)
library(RcppEigen)
library(RcppArmadillo)
library(Rcpp)
library(rcompanion)
library(rcmdcheck)
library(rbibutils)
library(rasterVis)
detach("package:rasterVis", unload = TRUE)
library(raster)
library(rasterVis)
library(rappdirs)
library(rainbow)
library(R6)
library(ragg)
library(quantreg)
library(quadprog)
library(qdapRegex)
library(purrr)
library(psych)
library(ps)
library(pryr)
library(proxy)
library(promises)
library(progressr)
library(progress)
library(profvis)
library(prodlim)
library(processx)
library(pROC)
library(prettyunits)
library(praise)
library(pracma)
library(popbio)
library(polynom)
library(polyclip)
library(png)
library(plyr)
library(plotrix)
library(plotly)
library(plot3D)
library(pkgload)
library(pkgdown)
library(pkgconfig)
library(pkgbuild)
library(pillar)
library(PerformanceAnalytics)
library(pbkrtest)
library(pbdZMQ)
library(parallelly)
library(openssl)
library(numDeriv)
library(nortest)
library(nloptr)
library(mvtnorm)
library(mvnormtest)
library(munsell)
library(multicool)
library(multcompView)
library(multcomp)
library(mosaicData)
library(mosaicCore)
library(mosaic)
library(modeltools)
library(modelr)
library(ModelMetrics)
library(mnormt)
library(mlogit)
library(mitools)
library(miscTools)
library(misc3d)
library(minqa)
library(miniUI)
library(mime)
library(memoise)
library(mclust)
library(maxLik)
library(matrixStats)
library(MatrixModels)
library(markdown)
library(maptools)
library(magrittr)
library(magic)
library(lwgeom)
library(lubridate)
library(lpSolve)
library(locfit)
library(lobstr)
library(lmom)
library(listenv)
library(linprog)
library(lifecycle)
library(lidR)
library(libcoin)
library(leaflet.providers)
library(leaflet)
library(lazyeval)
library(lava)
library(latticeExtra)
library(later)
library(labelled)
library(labeling)
library(ks)
library(knitr)
library(kernlab)
library(keras)
library(jsonlite)
library(jquerylib)
library(jpeg)
library(janeaustenr)
library(iterators)
library(isoband)
library(IRkernel)
library(IRdisplay)
library(ipred)
library(interp)
library(insight)
library(ini)
library(ids)
library(IDPmisc)
library(hunspell)
library(httr)
library(httpuv)
library(htmlwidgets)
library(htmltools)
library(hms)
library(highr)
library(hexbin)
library(here)
library(hdrcde)
library(haven)
library(hardhat)
library(gtools)
library(gtable)
library(gridExtra)
library(GPArotation)
library(gower)
library(googlesheets4)
library(googledrive)
library(goftest)
library(gmodels)
library(glue)
library(globals)
library(glm2)
library(glm.predict)
library(glm.deploy)
library(gld)
library(gitcreds)
library(gh)
library(ggsignif)
library(ggsci)
library(ggrepel)
library(ggpubr)
library(ggforce)
library(ggdendro)
library(gert)
library(geometry)
library(generics)
library(gdata)
library(gargle)
library(gapminder)
library(future.apply)
detach("package:future", unload = TRUE)
library(future)
library(fs)
library(Formula)
library(foreach)
library(forcats)
library(fontawesome)
library(FNN)
library(fds)
library(fda)
library(fastR2)
library(fastmap)
library(farver)
library(fansi)
library(expm)
library(Exact)
library(evaluate)
library(estimability)
library(ellipsis)
library(effects)
library(Ecfun)
library(Ecdat)
library(dtplyr)
library(downlit)
library(digest)
library(diffobj)
library(devtools)
library(DescTools)
library(desc)
library(DEoptimR)
library(deldir)
library(dbplyr)
library(DBI)
library(data.table)
library(DAAG)
library(curl)
library(credentials)
library(crosstalk)
library(crayon)
library(cpp11)
library(cowplot)
library(corrplot)
library(corpcor)
library(config)
library(commonmark)
library(colorspace)
library(coin)
library(clipr)
library(cli)
library(classInt)
library(cellranger)
library(callr)
library(cachem)
library(bslib)
library(broom)
library(brio)
library(brew)
stdntMH <- stdntMH %>% mutate(CGPA2=recode(CGPA, '0 - 1.99'='0', '2.00 - 2.49'='1', '2.50 - 2.99'='2', '3.00 - 3.49'='3', '3.50 - 4.00'='4'))
FitAll = lm(CGPA2 ~ ., data = stdntMH)
summary(FitAll)
stdntMH <- stdntMH %>% mutate(Year2=recode(Year, 'year 1'='1', 'Year 1'='1', 'year 2'='2', 'Year 2'='2', 'year 3'='3', 'Year 3' = '3', 'year 4'='4', 'Year 4'='4'))
stdntMH2 <- subset(stdntMH, select = -c(Timestamp, Year, CGPA))
stdntMH2
FitAll = lm(CGPA2 ~ ., data=stdntMH2)
summary(FitAll)
step(FitAll, direction = 'backward')
step(FitAll, direction = 'backward')
step(FitAll, direction = 'backward')
View(stdntMH2)
FitAll = lm(CGPA2 ~ ., data=stdntMH2)
summary(FitAll)
step(FitAll, direction = 'backward')
step(FitAll, direction = 'backward')
backward <- step(FitAll, direction = 'backward')
step(FitAll, direction = 'backward', scope=formula(FitAll), trace=0)
step(FitAll, direction='backward', scope=formula(FitAll), trace=0)
library(tidyverse)
library(lattice, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(translations, lib.loc = "C:/Program Files/R/R-4.1.3/library")
library(scales)
step(FitAll, direction='backward', scope=formula(FitAll), trace=0)
install.packages("car")
install.packages("caret")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("e1071")
install.packages("lmtest")
library("car")
library("caret")
library("predictmeans")
library("e1071")
library("lmtest")
library("gvlma")
#Lesson 4
#Out of the 5 datasets that you chose during DSO104, choose a dataset that has a
#continuous variable that you think would be valuable to predict. Also, this dataset must
#have at least 4 other variables of type numeric or Boolean that can be used as
#independent variables. Perform stepwise regression in R. It is your choice to do forward or
#backward elimination. Are there any variables you chose that can be removed without
#decreasing R-squared?
#Tip: Make sure to remove NA's after you create a dataframe with your selected variables
library(readr)
Student_Mental_health <- read_csv("C:/Users/sdstc/Documents/Education/Other/Entity Academy/Portfolio/Datasets/Mental Health/Student Mental Health.csv")
View(Student_Mental_health)
#Question SETUP: Predict students' GPAs based on all other independent variables
#in the dataset.
stdntMH <- na.omit(Student_Mental_health)
colnames(stdntMH)[6] ="CGPA"
colnames(stdntMH)[5] = "Year"
stdntMH <- stdntMH %>% mutate(CGPA2=recode(CGPA, '0 - 1.99'='0', '2.00 - 2.49'='1', '2.50 - 2.99'='2', '3.00 - 3.49'='3', '3.50 - 4.00'='4'))
FitAll = lm(CGPA2 ~ ., data = stdntMH)
summary(FitAll)
#Using this dataframe only made it impossible to find out the coeeficients and statistics
#for the analysis of the dataset. So we will clean up our data a bit more in hopes of being
#able to perform a forward selection.
stdntMH <- stdntMH %>% mutate(Year2=recode(Year, 'year 1'='1', 'Year 1'='1', 'year 2'='2', 'Year 2'='2', 'year 3'='3', 'Year 3' = '3', 'year 4'='4', 'Year 4'='4'))
stdntMH2 <- subset(stdntMH, select = -c(Timestamp, Year, CGPA))
stdntMH2
#Write out CSV file to specific place in folder
write.csv(stdntMH2,"~/Education/Other/Entity Academy/Portfolio/DSO106C Extra Portfolio Activities/Student Mental Health//Student Mental Health Revamped.csv", row.names = FALSE)
FitAll = lm(CGPA2 ~ ., data=stdntMH2)
summary(FitAll)
#According to the statistics acquired via summary of the FitAll formula, Fiqh course held
#the most significance, followed by Biotechnology. Fiqh entails Islamic law, which may likely be a contributing
#factor to a student's current GPA and mental health outcomes.
step(FitAll, direction='backward', scope=formula(FitAll), trace=0)
#The best fit model appears to be:
fitsome = lm(CGPA2 ~ `Choose your gender` + `What is your course?` + `Do you have Depression?` + `Do you have Anxiety?` + Year2, data = stdntMH2)
summary(fitsome)
install.packages("car")
install.packages("caret")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("e1071")
install.packages("lmtest")
install.packages("gvlma")
install.packages("predictmeans")
install.packages("e1071")
install.packages("lmtest")
step(FitAll, direction='backward')
step(FitAll, direction = 'backward')
step(FitAll, direction = 'forward')
install.packages(c("broom", "callr", "caret", "cli", "desc", "DescTools", "dplyr", "dtplyr", "estimability", "evaluate", "forcats", "future", "future.apply", "gargle", "gert", "ggforce", "ggformula", "gh", "gitcreds", "globals", "googlesheets4", "gtable", "haven", "hms", "httpuv", "httr", "hunspell", "insight", "janeaustenr", "knitr", "labelled", "lifecycle", "lpSolve", "MatrixModels", "modelr", "mosaic", "mosaicCore", "mosaicData", "openssl", "pillar", "progressr", "raster", "rbibutils", "RcppArmadillo", "RCurl", "reprex", "reticulate", "rlang", "rmarkdown", "rrcov", "rstudioapi", "rversions", "rvest", "statmod", "stringr", "terra", "tfruns", "tidyr", "tidytext", "tinytex", "tweenr", "viridisLite", "xfun", "zip", "zoo"))
step(FitAll, direction = 'backward')
install.packages(c("broom", "callr", "caret", "cli", "desc", "DescTools", "dplyr", "dtplyr", "estimability", "evaluate", "forcats", "future", "future.apply", "gargle", "gert", "ggforce", "ggformula", "gh", "gitcreds", "globals", "googlesheets4", "gtable", "haven", "hms", "httpuv", "httr", "hunspell", "insight", "janeaustenr", "knitr", "labelled", "lifecycle", "lpSolve", "MatrixModels", "modelr", "mosaic", "mosaicCore", "mosaicData", "openssl", "pillar", "progressr", "raster", "rbibutils", "RcppArmadillo", "RCurl", "reprex", "reticulate", "rlang", "rmarkdown", "rrcov", "rstudioapi", "rversions", "rvest", "statmod", "stringr", "terra", "tfruns", "tidyr", "tidytext", "tinytex", "tweenr", "viridisLite", "xfun", "zip", "zoo"))
install.packages(c("broom", "callr", "caret", "cli", "desc", "DescTools", "dplyr", "dtplyr", "estimability", "evaluate", "forcats", "future", "future.apply", "gargle", "gert", "ggforce", "ggformula", "gh", "gitcreds", "globals", "googlesheets4", "gtable", "haven", "hms", "httpuv", "httr", "hunspell", "insight", "janeaustenr", "knitr", "labelled", "lifecycle", "lpSolve", "MatrixModels", "modelr", "mosaic", "mosaicCore", "mosaicData", "openssl", "pillar", "progressr", "raster", "rbibutils", "RcppArmadillo", "RCurl", "reprex", "reticulate", "rlang", "rmarkdown", "rrcov", "rstudioapi", "rversions", "rvest", "statmod", "stringr", "terra", "tfruns", "tidyr", "tidytext", "tinytex", "tweenr", "viridisLite", "xfun", "zip", "zoo"))
install.packages(c("broom", "callr", "caret", "cli", "desc", "DescTools", "dplyr", "dtplyr", "estimability", "evaluate", "forcats", "future", "future.apply", "gargle", "gert", "ggforce", "ggformula", "gh", "gitcreds", "globals", "googlesheets4", "gtable", "haven", "hms", "httpuv", "httr", "hunspell", "insight", "janeaustenr", "knitr", "labelled", "lifecycle", "lpSolve", "MatrixModels", "modelr", "mosaic", "mosaicCore", "mosaicData", "openssl", "pillar", "progressr", "raster", "rbibutils", "RcppArmadillo", "RCurl", "reprex", "reticulate", "rlang", "rmarkdown", "rrcov", "rstudioapi", "rversions", "rvest", "statmod", "stringr", "terra", "tfruns", "tidyr", "tidytext", "tinytex", "tweenr", "viridisLite", "xfun", "zip", "zoo"))
install.packages(c("broom", "callr", "caret", "cli", "desc", "DescTools", "dplyr", "dtplyr", "estimability", "evaluate", "forcats", "future", "future.apply", "gargle", "gert", "ggforce", "ggformula", "gh", "gitcreds", "globals", "googlesheets4", "gtable", "haven", "hms", "httpuv", "httr", "hunspell", "insight", "janeaustenr", "knitr", "labelled", "lifecycle", "lpSolve", "MatrixModels", "modelr", "mosaic", "mosaicCore", "mosaicData", "openssl", "pillar", "progressr", "raster", "rbibutils", "RcppArmadillo", "RCurl", "reprex", "reticulate", "rlang", "rmarkdown", "rrcov", "rstudioapi", "rversions", "rvest", "statmod", "stringr", "terra", "tfruns", "tidyr", "tidytext", "tinytex", "tweenr", "viridisLite", "xfun", "zip", "zoo"))
step(FitAll, direction = 'backward')
step(FitAll, direction = 'forward')
fitsome = lm(CGPA2 ~ `Choose your gender` + `What is your course?` + `Do you have Depression?` + `Do you have Anxiety?` + Year2, data = stdntMH2)
summary(fitsome)
